

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
 
    - name: Run GitLeaks
      uses: gitleaks/gitleaks-action@v2
      
    - name: Check for Leaks
      run: |
        if grep -q 'Secret detected' gitleaks-report.json; then
          echo "❌ Secrets detected! Please remove them before pushing."
          exit 1
        else
          echo "✅ No secrets found."
        fi
        
    - name: Run Trivy Dependency Scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: "fs"
        ignore-unfixed: true
        severity: "CRITICAL"
        exit-code: "1"

    - name: Scan Dockerfile with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: "config"
        scan-ref: "./dockerfile"
        exit-code: "1"


  
    # - name: SonarCloud Scan
    #   if: github.event_name == 'pull_request'
    #   uses: sonarsource/sonarcloud-github-action@master
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #   with:
    #     args: >
    #         -Dsonar.organization=my-org
    #         -Dsonar.projectKey=my-project
    
    - name: display
      run: ls -l

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: build and push project to docker hub
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./dockerfile
        push: true
        tags: infinityam1/first_repo:test


    - name: Extract Digest
      run: |
        IMAGE=infinityam1/first_repo:test
        DIGEST=$(docker images --no-trunc --quiet $IMAGE)
        echo "IMAGE_DIGEST=$DIGEST" >> $GITHUB_ENV

    - name: Sign Image with Cosign
      uses: sigstore/cosign-installer@main

    - name: Generate Cosign Key Pair
      run: |
        cosign generate-key-pair
        ls -l cosign.*

    - name: Cosign Sign
      run: |
        cosign sign --yes --key cosign.key infinityam1/first_repo@${{ env.IMAGE_DIGEST }}
    
    - name: Cosign Verify
      run: |
        cosign verify --key cosign.pub infinityam1/first_repo@${{ env.IMAGE_DIGEST }}
